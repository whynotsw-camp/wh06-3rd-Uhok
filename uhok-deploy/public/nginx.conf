# uhok-deploy/nginx.conf (리버스 프록시, Compose 서비스명과 동기화)

# ✅ Docker Compose 서비스명 사용
upstream backend_service {
    # server ${BACKEND_PRIVATE_IP}:9000;
    server backend:9000;
    keepalive 32;
}
upstream frontend_service {
    server frontend:80; # ← frontend 컨테이너는 같은 compose 내부
    keepalive 32;
}
upstream ml_service {
    # server ${ML_PRIVATE_IP}:8001;
    server ml-inference:8001;
    keepalive 32;
}

# (웹소켓이 있다면) 업그레이드 헤더 - http 블록 레벨에 위치
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80 default_server;
    server_name localhost _;  # ← 도메인 + 캐치올(IP 접속도 수용)

    # --- 기본 보안/성능 ---
    server_tokens off;
    client_max_body_size 20m;
    keepalive_timeout 65s;
    client_body_timeout 30s;
    send_timeout 30s;

    # gzip (정적/프록시 응답 압축)
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/javascript application/json application/xml image/svg+xml;

    # ----- 공통 프록시 옵션(안정성) -----
    proxy_http_version 1.1;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_set_header Connection         "";
    proxy_read_timeout 75s;   # 롱폴링 대비
    proxy_send_timeout 30s;

    # 헬스체크(로드밸런서/모니터링용)
    location = /nginx-health {
        add_header Content-Type text/plain;
        return 200 "OK";
    }

    # --- API 프록시 ---
    # 결제 API: (더 긴 프리픽스가 먼저 매칭되므로 /api/payment/를 먼저 둡니다)
    location /api/payment/ {
        # 웹소켓 필요 시
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://backend_service/api/payment/;
        proxy_buffering on;     # 결제 콜백 응답은 일반적으로 버퍼링 OK
    }

    # API 프록시 (/api → backend:9000/api)
    location /api/ {
        # 웹소켓 사용 시 헤더
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://backend_service/api/;
        # SSE를 쓸 경우에만 켜세요:
        # proxy_buffering off;
        # add_header Cache-Control no-cache;
    }

    # ML API
    location /ml/ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://ml_service/;
    }

    # --- 프론트엔드 프록시 ---
    location / {
        proxy_pass http://frontend_service;
        # SPA 직접 서빙(옵션 A)으로 전환하면 아래 블록 참고
    }

    # 문서/스키마 프록시
    location ~ ^/(docs|redoc|openapi.json)(/.*)?$ {
        proxy_pass http://backend_service$request_uri;
    }

    # 공통 보안 헤더(필요시 조정)
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header X-XSS-Protection "1; mode=block" always;
    # add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self'" always; # (도입 시 CSP 예외 확인 필요)

}
